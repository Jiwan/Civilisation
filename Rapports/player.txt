Espace de noms Player :
Afin de pouvoir implémenter plusieurs types de joueurs, nous avons créé une interface commune IPlayer. 
En effet nous voulons pouvoir gérer aussi bien un joueur humain qu'une intelligence artificielle, qu'un joueur en ligne, ...
Nous avons pour l'instant deux implémentations :
- HumanPlayer : qui gère un joueur humain manipulant la machine sur laquelle tourne le jeu. 
Cette implémentation utilise, comme la classe Game, le pattern observateur pour gérer les entrées utilisateur (la souris et le clavier).
- AIPlayer : qui gère une intelligence artificielle basique.
Les joueurs modifient le cours de la partie à l'aide d'une liste d'action qui est mise à jour à chaque tour.
Un joueur possède aussi un état (pattern state) qui influence son comportement. Par exemple un joueur peut être dans l'état actif, l'état inactif,
voire l'état déconnecté dans le cas d'un jeu en ligne. 

Espace de noms Player.Actions :
Nous avons décidé d'encapsuler les différentes actions des joueurs par un pattern commande. 
Les communications entre les objets sont donc maintenant contenues dans un objet ayant pour interface IPlayerAction.
On peut citer de nombreux avantages à utiliser ce pattern plutôt que des "appels bruts" à des fonctions :
- Loguer les différentes actions des joueurs.
- Débuguer facilement le déroulement d'une partie.
- Si l'on veut implémenter un système de replay, il nous suffira de loguer toutes les actions et de les rejouer.
- Faire un système de retour en arrière.
- Si l'on veut faire un jeu en ligne, il nous suffira d'envoyer les actions des joueurs par paquets sous forme sérializée. Il ne restera plus qu'à 
désérialiser les actions à la reception des paquets pour synchroniser les deux joueurs.
Pour l'instant nous implémentons cette interface à l'aide d'une classe InGameAction et de nombreuses sous-classes comme AttackAction, BuildCityAction, etc.
Nous envisageons de rajouter d'autres classes mères implémentant l'interface IPlayerAction, comme par exemple ChatBoxAction pour la gestion de dialogues.